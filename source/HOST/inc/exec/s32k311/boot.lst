
boot.elf:     file format elf32-littlearm
boot.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00010000 vaddr 0x20400000 paddr 0x20400000 align 2**16
         filesz 0x0000014c memsz 0x0000024c flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014c  20400000  20400000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .heap         00000100  2040014c  2040014c  0001014c  2**0
                  ALLOC
  2 .ARM.attributes 00000021  00000000  00000000  0001014c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
20400000 l    d  .text	00000000 .text
2040014c l    d  .heap	00000000 .heap
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 build/src/boot.o
40052000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WDOG_CS
00000004 l       *ABS*	00000000 WDOG_CNT
00000008 l       *ABS*	00000000 WDOG_TOVAL
0000000c l       *ABS*	00000000 WDOG_WIN
c0000000 l       *ABS*	00000000 PCC_ACTIVE
80000000 l       *ABS*	00000000 PCC_INACTIVE
40065000 l       *ABS*	00000000 PCC_BASE
40065100 l       *ABS*	00000000 PCC_BASE2
00000080 l       *ABS*	00000000 PCC_FTFC
00000084 l       *ABS*	00000000 PCC_DMAMUX
00000090 l       *ABS*	00000000 PCC_FLEXCAN0
00000094 l       *ABS*	00000000 PCC_FLEXCAN1
00000098 l       *ABS*	00000000 PCC_FTM3
0000009c l       *ABS*	00000000 PCC_ADC1
000000ac l       *ABS*	00000000 PCC_FLEXCAN2
000000b0 l       *ABS*	00000000 PCC_LPSPI0
000000b4 l       *ABS*	00000000 PCC_LPSPI1
000000b8 l       *ABS*	00000000 PCC_LPSPI2
000000c4 l       *ABS*	00000000 PCC_PDB1
000000c8 l       *ABS*	00000000 PCC_CRC
000000d8 l       *ABS*	00000000 PCC_PDB0
000000dc l       *ABS*	00000000 PCC_LPIT
000000e0 l       *ABS*	00000000 PCC_FTM0
000000e4 l       *ABS*	00000000 PCC_FTM1
000000e8 l       *ABS*	00000000 PCC_FTM2
000000ec l       *ABS*	00000000 PCC_ADC0
000000f4 l       *ABS*	00000000 PCC_RTC
00000000 l       *ABS*	00000000 PCC_LPTMR0
00000024 l       *ABS*	00000000 PCC_PORTA
00000028 l       *ABS*	00000000 PCC_PORTB
0000002c l       *ABS*	00000000 PCC_PORTC
00000030 l       *ABS*	00000000 PCC_PORTD
00000034 l       *ABS*	00000000 PCC_PORTE
00000050 l       *ABS*	00000000 PCC_SAI0
00000054 l       *ABS*	00000000 PCC_SAI1
00000068 l       *ABS*	00000000 PCC_FLEXIO
00000084 l       *ABS*	00000000 PCC_EWM
00000098 l       *ABS*	00000000 PCC_LPI2C0
0000009c l       *ABS*	00000000 PCC_LPI2C1
000000a8 l       *ABS*	00000000 PCC_LPUART0
000000ac l       *ABS*	00000000 PCC_LPUART1
000000b0 l       *ABS*	00000000 PCC_LPUART2
000000b8 l       *ABS*	00000000 PCC_FTM4
000000bc l       *ABS*	00000000 PCC_FTM5
000000c0 l       *ABS*	00000000 PCC_FTM6
000000c4 l       *ABS*	00000000 PCC_FTM7
000000cc l       *ABS*	00000000 PCC_CMP0
000000d8 l       *ABS*	00000000 PCC_QSPI
000000e4 l       *ABS*	00000000 PCC_ENET
400ff000 l       *ABS*	00000000 GPIOA_BASE
400ff480 l       *ABS*	00000000 GPIOB_BASE
400ff080 l       *ABS*	00000000 GPIOC_BASE
400ff0c0 l       *ABS*	00000000 GPIOD_BASE
400ff100 l       *ABS*	00000000 GPIOE_BASE
00000000 l       *ABS*	00000000 PDOR
00000004 l       *ABS*	00000000 PSOR
00000008 l       *ABS*	00000000 PCOR
0000000c l       *ABS*	00000000 PTOR
00000010 l       *ABS*	00000000 PDIR
00000014 l       *ABS*	00000000 PDDR
00000018 l       *ABS*	00000000 PIDR
40049000 l       *ABS*	00000000 PORTA_BASE
4004a000 l       *ABS*	00000000 PORTB_BASE
4004b000 l       *ABS*	00000000 PORTC_BASE
4004c000 l       *ABS*	00000000 PORTD_BASE
4004d000 l       *ABS*	00000000 PORTE_BASE
00000000 l       *ABS*	00000000 PCR0
00000004 l       *ABS*	00000000 PCR1
00000008 l       *ABS*	00000000 PCR2
0000000c l       *ABS*	00000000 PCR3
00000010 l       *ABS*	00000000 PCR4
00000014 l       *ABS*	00000000 PCR5
00000018 l       *ABS*	00000000 PCR6
0000001c l       *ABS*	00000000 PCR7
00000020 l       *ABS*	00000000 PCR8
00000024 l       *ABS*	00000000 PCR9
00000028 l       *ABS*	00000000 PCR10
0000002c l       *ABS*	00000000 PCR11
00000030 l       *ABS*	00000000 PCR12
00000034 l       *ABS*	00000000 PCR13
00000038 l       *ABS*	00000000 PCR14
0000003c l       *ABS*	00000000 PCR15
00000040 l       *ABS*	00000000 PCR16
00000044 l       *ABS*	00000000 PCR17
00000048 l       *ABS*	00000000 PCR18
0000004c l       *ABS*	00000000 PCR19
00000050 l       *ABS*	00000000 PCR20
00000054 l       *ABS*	00000000 PCR21
00000058 l       *ABS*	00000000 PCR22
0000005c l       *ABS*	00000000 PCR23
00000060 l       *ABS*	00000000 PCR24
00000064 l       *ABS*	00000000 PCR25
00000068 l       *ABS*	00000000 PCR26
0000006c l       *ABS*	00000000 PCR27
00000070 l       *ABS*	00000000 PCR28
00000074 l       *ABS*	00000000 PCR29
00000078 l       *ABS*	00000000 PCR30
0000007c l       *ABS*	00000000 PCR31
00000080 l       *ABS*	00000000 GPCLR
00000084 l       *ABS*	00000000 GPCHR
00000088 l       *ABS*	00000000 GICLR
0000008c l       *ABS*	00000000 GICHR
000000a0 l       *ABS*	00000000 ISFR
000000c0 l       *ABS*	00000000 DFER
000000c4 l       *ABS*	00000000 DFCR
000000c8 l       *ABS*	00000000 DFWR
402ec000 l       *ABS*	00000000 C40ASF_BASE
00000000 l       *ABS*	00000000 C40ASF_MCR
00000004 l       *ABS*	00000000 C40ASF_MCRS
402ec100 l       *ABS*	00000000 C40ASF_DATA
40268000 l       *ABS*	00000000 PFLASH_BASE
40268300 l       *ABS*	00000000 PFLASH_PEADRL
00000040 l       *ABS*	00000000 PFLASH_SPELOCK0
00000044 l       *ABS*	00000000 PFLASH_SPELOCK1
00000048 l       *ABS*	00000000 PFLASH_SPELOCK2
0000004c l       *ABS*	00000000 PFLASH_SPELOCK3
00000050 l       *ABS*	00000000 PFLASH_SPELOCK4
00000058 l       *ABS*	00000000 PFLASH_SPELOCKU
0000005c l       *ABS*	00000000 PFLASH_SSPELOCK0
00000060 l       *ABS*	00000000 PFLASH_SSPELOCK1
00000064 l       *ABS*	00000000 PFLASH_SSPELOCK2
00000068 l       *ABS*	00000000 PFLASH_SSPELOCK3
20400000 l       .text	00000000 reset_vector
20400008 l       .text	00000000 main_start
20400108 l       .text	00000000 unlock_all
2040000e l       .text	00000000 main_loop
20400014 l       .text	00000000 main_loop_wait
20400038 l       .text	00000000 prog_flash
20400048 l       .text	00000000 erase_sector
20400076 l       .text	00000000 erase_block
204000e6 l       .text	00000000 read_flash
2040003e l       .text	00000000 prog_flash_1
204000a4 l       .text	00000000 prog_row
20400062 l       .text	00000000 erase_sector_wait
20400090 l       .text	00000000 erase_block_wait
204000ac l       .text	00000000 prog_row_loop
204000d0 l       .text	00000000 prog_row_wait
204000ec l       .text	00000000 read_flash_1
204000fa l       .text	00000000 wait_fl_rdy
00000000         *UND*	00000000 reset_addr
00000100 g       *ABS*	00000000 heap_size
00000000 g       *ABS*	00000000 _sidata
2040014c g       .text	00000000 __exidx_end
2040014c g       .text	00000000 _etext
2040014c g       .text	00000000 _sbss
2040014c g       .text	00000000 __bss_start__
2040014c g       .text	00000000 _sdata
2040024c g       .heap	00000000 _heap_end
2040014c g       .text	00000000 __exidx_start
2040014c g       .text	00000000 _ebss
2040014c g       .heap	00000000 _heap_start
2040014c g       .text	00000000 __bss_end__
00000400 g       *ABS*	00000000 stack_size
2040fc00 g       *ABS*	00000000 _stack_end
20410000 g       .text	00000000 _stack_start
2040014c g       .text	00000000 _edata



Disassembly of section .text:

20400000 <reset_vector>:
20400000:	20400ffc 	strdcs	r0, [r0], #-252	; 0xffffff04
20400004:	20400009 	subcs	r0, r0, r9

20400008 <main_start>:
20400008:	b662      	cpsie	i
2040000a:	f000 f87d 	bl	20400108 <unlock_all>

2040000e <main_loop>:
2040000e:	4948      	ldr	r1, [pc, #288]	; (20400130 <unlock_all+0x28>)
20400010:	2200      	movs	r2, #0
20400012:	600a      	str	r2, [r1, #0]

20400014 <main_loop_wait>:
20400014:	6808      	ldr	r0, [r1, #0]
20400016:	4290      	cmp	r0, r2
20400018:	d0fc      	beq.n	20400014 <main_loop_wait>
2040001a:	1c03      	adds	r3, r0, #0
2040001c:	f06f 02ff 	mvn.w	r2, #255	; 0xff
20400020:	4013      	ands	r3, r2
20400022:	22ff      	movs	r2, #255	; 0xff
20400024:	4010      	ands	r0, r2
20400026:	2852      	cmp	r0, #82	; 0x52
20400028:	d006      	beq.n	20400038 <prog_flash>
2040002a:	2853      	cmp	r0, #83	; 0x53
2040002c:	d00c      	beq.n	20400048 <erase_sector>
2040002e:	2854      	cmp	r0, #84	; 0x54
20400030:	d021      	beq.n	20400076 <erase_block>
20400032:	2851      	cmp	r0, #81	; 0x51
20400034:	d057      	beq.n	204000e6 <read_flash>
20400036:	e7ea      	b.n	2040000e <main_loop>

20400038 <prog_flash>:
20400038:	4c3e      	ldr	r4, [pc, #248]	; (20400134 <unlock_all+0x2c>)
2040003a:	f04f 0710 	mov.w	r7, #16

2040003e <prog_flash_1>:
2040003e:	f000 f831 	bl	204000a4 <prog_row>
20400042:	3f01      	subs	r7, #1
20400044:	d1fb      	bne.n	2040003e <prog_flash_1>
20400046:	e7e2      	b.n	2040000e <main_loop>

20400048 <erase_sector>:
20400048:	4d3b      	ldr	r5, [pc, #236]	; (20400138 <unlock_all+0x30>)
2040004a:	602b      	str	r3, [r5, #0]
2040004c:	4d3b      	ldr	r5, [pc, #236]	; (2040013c <unlock_all+0x34>)
2040004e:	602b      	str	r3, [r5, #0]
20400050:	4d3b      	ldr	r5, [pc, #236]	; (20400140 <unlock_all+0x38>)
20400052:	f04f 0110 	mov.w	r1, #16
20400056:	6029      	str	r1, [r5, #0]
20400058:	f04f 0111 	mov.w	r1, #17
2040005c:	6029      	str	r1, [r5, #0]
2040005e:	f44f 4200 	mov.w	r2, #32768	; 0x8000

20400062 <erase_sector_wait>:
20400062:	6869      	ldr	r1, [r5, #4]
20400064:	4011      	ands	r1, r2
20400066:	d0fc      	beq.n	20400062 <erase_sector_wait>
20400068:	f04f 0110 	mov.w	r1, #16
2040006c:	6029      	str	r1, [r5, #0]
2040006e:	f04f 0100 	mov.w	r1, #0
20400072:	6029      	str	r1, [r5, #0]
20400074:	e7cb      	b.n	2040000e <main_loop>

20400076 <erase_block>:
20400076:	4d30      	ldr	r5, [pc, #192]	; (20400138 <unlock_all+0x30>)
20400078:	602b      	str	r3, [r5, #0]
2040007a:	4d30      	ldr	r5, [pc, #192]	; (2040013c <unlock_all+0x34>)
2040007c:	602b      	str	r3, [r5, #0]
2040007e:	4d30      	ldr	r5, [pc, #192]	; (20400140 <unlock_all+0x38>)
20400080:	f04f 0130 	mov.w	r1, #48	; 0x30
20400084:	6029      	str	r1, [r5, #0]
20400086:	f04f 0131 	mov.w	r1, #49	; 0x31
2040008a:	6029      	str	r1, [r5, #0]
2040008c:	f44f 4200 	mov.w	r2, #32768	; 0x8000

20400090 <erase_block_wait>:
20400090:	6869      	ldr	r1, [r5, #4]
20400092:	4011      	ands	r1, r2
20400094:	d0fc      	beq.n	20400090 <erase_block_wait>
20400096:	f04f 0130 	mov.w	r1, #48	; 0x30
2040009a:	6029      	str	r1, [r5, #0]
2040009c:	f04f 0100 	mov.w	r1, #0
204000a0:	6029      	str	r1, [r5, #0]
204000a2:	e7b4      	b.n	2040000e <main_loop>

204000a4 <prog_row>:
204000a4:	4d24      	ldr	r5, [pc, #144]	; (20400138 <unlock_all+0x30>)
204000a6:	602b      	str	r3, [r5, #0]
204000a8:	4d24      	ldr	r5, [pc, #144]	; (2040013c <unlock_all+0x34>)
204000aa:	2020      	movs	r0, #32

204000ac <prog_row_loop>:
204000ac:	6821      	ldr	r1, [r4, #0]
204000ae:	6029      	str	r1, [r5, #0]
204000b0:	3404      	adds	r4, #4
204000b2:	3504      	adds	r5, #4
204000b4:	3801      	subs	r0, #1
204000b6:	d1f9      	bne.n	204000ac <prog_row_loop>
204000b8:	4d21      	ldr	r5, [pc, #132]	; (20400140 <unlock_all+0x38>)
204000ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
204000be:	6069      	str	r1, [r5, #4]
204000c0:	f44f 7180 	mov.w	r1, #256	; 0x100
204000c4:	6029      	str	r1, [r5, #0]
204000c6:	f240 1101 	movw	r1, #257	; 0x101
204000ca:	6029      	str	r1, [r5, #0]
204000cc:	f44f 4200 	mov.w	r2, #32768	; 0x8000

204000d0 <prog_row_wait>:
204000d0:	6869      	ldr	r1, [r5, #4]
204000d2:	4011      	ands	r1, r2
204000d4:	d0fc      	beq.n	204000d0 <prog_row_wait>
204000d6:	f44f 7180 	mov.w	r1, #256	; 0x100
204000da:	6029      	str	r1, [r5, #0]
204000dc:	f04f 0100 	mov.w	r1, #0
204000e0:	6029      	str	r1, [r5, #0]
204000e2:	3380      	adds	r3, #128	; 0x80
204000e4:	4770      	bx	lr

204000e6 <read_flash>:
204000e6:	4c13      	ldr	r4, [pc, #76]	; (20400134 <unlock_all+0x2c>)
204000e8:	f44f 7700 	mov.w	r7, #512	; 0x200

204000ec <read_flash_1>:
204000ec:	681a      	ldr	r2, [r3, #0]
204000ee:	6022      	str	r2, [r4, #0]
204000f0:	3304      	adds	r3, #4
204000f2:	3404      	adds	r4, #4
204000f4:	3f01      	subs	r7, #1
204000f6:	d1f9      	bne.n	204000ec <read_flash_1>
204000f8:	e789      	b.n	2040000e <main_loop>

204000fa <wait_fl_rdy>:
204000fa:	4d11      	ldr	r5, [pc, #68]	; (20400140 <unlock_all+0x38>)
204000fc:	792a      	ldrb	r2, [r5, #4]
204000fe:	f44f 4100 	mov.w	r1, #32768	; 0x8000
20400102:	400a      	ands	r2, r1
20400104:	d0f9      	beq.n	204000fa <wait_fl_rdy>
20400106:	e782      	b.n	2040000e <main_loop>

20400108 <unlock_all>:
20400108:	4d0b      	ldr	r5, [pc, #44]	; (20400138 <unlock_all+0x30>)
2040010a:	2100      	movs	r1, #0
2040010c:	65e9      	str	r1, [r5, #92]	; 0x5c
2040010e:	6629      	str	r1, [r5, #96]	; 0x60
20400110:	6669      	str	r1, [r5, #100]	; 0x64
20400112:	490c      	ldr	r1, [pc, #48]	; (20400144 <unlock_all+0x3c>)
20400114:	6429      	str	r1, [r5, #64]	; 0x40
20400116:	490c      	ldr	r1, [pc, #48]	; (20400148 <unlock_all+0x40>)
20400118:	6469      	str	r1, [r5, #68]	; 0x44
2040011a:	f06f 01ff 	mvn.w	r1, #255	; 0xff
2040011e:	64a9      	str	r1, [r5, #72]	; 0x48
20400120:	4770      	bx	lr
20400122:	bf00      	nop
20400124:	f3af 8000 	nop.w
20400128:	f3af 8000 	nop.w
2040012c:	f3af 8000 	nop.w
20400130:	20400c00 	subcs	r0, r0, r0, lsl #24
20400134:	20400400 	subcs	r0, r0, r0, lsl #8
20400138:	40268300 	eormi	r8, r6, r0, lsl #6
2040013c:	402ec100 	eormi	ip, lr, r0, lsl #2
20400140:	402ec000 	eormi	ip, lr, r0
20400144:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20400148:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000

Disassembly of section .heap:

2040014c <_heap_start>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002041 	andeq	r2, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000016 	andeq	r0, r0, r6, lsl r0
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600344d 	streq	r3, [r0], -sp, asr #8
  1c:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
  20:	Address 0x0000000000000020 is out of bounds.

